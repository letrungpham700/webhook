groups:
- name: ServiceDown
  rules:
  - alert: VM-DOWN
    expr: up == 0
    for: 20s
    labels:
      severity: VM-DOWN
    annotations:
      description: "Job: {{ $labels.job }}\nIP: {{ $labels.instance }} - DOWN"
      summary: "ServiceDown"

#======================================================================================================

groups:
- name: ServiceUP
  rules:
  - alert: VM-UP
    expr: time() - node_boot_time_seconds < 300
    for: 20s
    labels:
      severity: VM-UP
    annotations:
      description: "Job: {{ $labels.job }}\nIP: {{ $labels.instance }} - UP"
      summary: "ServiceUP"

#======================================================================================================

groups:
- name: Established
  rules:
  - alert: established
    expr: node_stat_ip_established_tomcat > 7
    for: 1m
    labels:
      severity: critical
    annotations:
      description: "Job: {{ $labels.job }}\nIP: {{ $labels.instance }}\nEstablished: {{$labels.ip}} - {{ $value }}"
      summary: "Established"


- name: DISK VM
  rules:
  - alert: Disk High
    expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes{mountpoint="/"} <= 70 or node_filesystem_avail_bytes{mountpoint="/"}/(1024^3) < 3
    for: 1s
    labels:
      severity: Critical-Disk High
    annotations:
      description: "IP: {{ $labels.instance }},\nMountpoint: {{ $labels.mountpoint }} = {{ $value|humanize }}% is {{ printf `node_filesystem_avail_bytes{instance='%s',mountpoint='/'}` $labels.instance | query | first | value | humanize}}B"
# (round((node_filesystem_avail_bytes{device!="tmpfs",mountpoint!="/boot"} * 100) / node_filesystem_size_bytes{device!="tmpfs",mountpoint!="/boot"}) <= 20 and on(instance, device, mountpoint) node_filesystem_readonly == 0 and (node_filesystem_avail_bytes{device!="tmpfs",mountpoint!="/boot"})/(1024^3) <=10)
- name: DISK-SPACE
  rules:
  - alert: DISK-FREE
    expr: (round((node_filesystem_avail_bytes{device!="tmpfs",mountpoint!="/boot"} * 100) / node_filesystem_size_bytes{device!="tmpfs",mountpoint!="/boot"}) <= 20 and on(instance, device, mountpoint) node_filesystem_readonly == 0 and (node_filesystem_avail_bytes{device!="tmpfs",mountpoint!="/boot"})/(1024^3) <=10)
    for: 1m
    labels:
      severity: Critical-Disk Free
    annotations:
      description: "IP: {{ $labels.instance }}\nMountpoint: {{ $labels.mountpoint }} = {{ $value|humanize }}% is {{ printf `node_filesystem_avail_bytes{instance='%s',mountpoint='%s'}` $labels.instance $labels.mountpoint | query | first | value | humanize}}B"


#======================================================================================================

name: VM-UP
expr: time() - node_boot_time_seconds < 300
for: 3s
annotations:
description: UP: {{ $labels.instance }} 
title: Instance {{ $labels.instance }} UP

#======================================================================================================

name: LINUX-CPU
expr: (round(100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100)) >= 90)
for: 10m
labels:
severity: Q9-critical-linuxcpu
annotations:
description: "CPU: {{ $labels.instance }} = {{ $value }}%"
summary: Host high CPU load (instance {{ $labels.instance }})

#======================================================================================================

name: LINUX-DISK
expr: (round(100 - ((node_filesystem_avail_bytes{mountpoint!= "/boot"} * 100) / node_filesystem_size_bytes{mountpoint!="/boot"})) > 90 and on(instance, device, mountpoint) node_filesystem_readonly == 0 and node_filesystem_avail_bytes{mountpoint!="/boot"} < 3.221225472e+10)
for: 2m
labels:
severity: Q9-critical-linuxdisk
annotations:
description: "{{ $labels.instance }}  Device: {{ $labels.device }} = {{ $value }}%,  Mountpoint: {{ $labels.mountpoint }}"  
summary: Host out of disk space (instance {{ $labels.instance }})

#======================================================================================================

name: LINUX-MEMORY
expr: (round(100 - ((node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes) * 100)) >= 90)
for: 15m
labels:
severity: Q9-critical-linuxmem
annotations:
description: MEMORY: {{ $labels.instance }}  = {{ $value }}%
summary: Host out of memory (instance {{ $labels.instance }})
timestamp: {{ with query "time()" }}{{ . | first | value | humanizeTimestamp }}{{ end }}

#======================================================================================================

name: ErrDisk
expr: node_filesystem_readonly{fstype!="ramfs"} == 1
for: 2m
labels:
severity: Q9-critical-errdisk
annotations:
description: ERR DISK Ip: {{ $labels.instance }}, Mountpoint: {{ $labels.mountpoint }} 
summary: ErrDisk (instance {{ $labels.instance }})

#======================================================================================================

name: PG_DOWN
expr: pg_up == 0
for: 1m
labels:
severity: GIT-Q9
annotations:
description: Service PG: {{ $labels.instance }} DOWN
title: PG_DOWN {{ $labels.instance }} alert

#======================================================================================================

name: PG_MAX_CONNECT
expr: pg_stat_activity_count{datname!~"template.*|postgres"} > 160
for: 1m
labels:
severity: GIT-Q9
annotations:
description: Service PG: database {{ $labels.datname }} in {{ $labels.server }} connect = {{ $value }}
title: PG_MAX_CONNECT {{ $labels.instance }} alert

name: ES_HEAP
expr: (round(100 - (((elasticsearch_jvm_memory_max_bytes{area="heap",job="Elasticsearch"} - elasticsearch_jvm_memory_used_bytes{area="heap",job="Elasticsearch"}) / elasticsearch_jvm_memory_max_bytes{area="heap",job="Elasticsearch"}) * 100))) >= 80
for: 1m
labels:
severity: Critical
annotations:
description: Service ES: {{ $labels.name }} HEAP USE {{ $value }}% 
title: ES_Heap {{ $labels.instance }} alert

name: Graylog_HEAP
expr: (round(100 - (((jvm_memory_heap_max{job="Graylog"} - jvm_memory_heap_used{job="Graylog"}) / jvm_memory_heap_max{job="Graylog"}) * 100))) >= 85
for: 1m
labels:
severity: critical
annotations:
description: Service Graylog: {{ $labels.instance }} HEAP USE {{ $value }}% 
title: Graylog_Heap {{ $labels.instance }} alert

name: ES_CPU
expr: elasticsearch_process_cpu_percent{job="Elasticsearch"} >= 75
for: 1m
labels:
severity: Critical
annotations:
description: Service ES: {{ $labels.name }} CPU USE {{ $value }}% 
title: ES_CPU {{ $labels.instance }} alert






#======================================================================================================

groups:
- name: node-exporter.rules
  rules:
  - alert: NodeHasRebooted
    annotations:
      description: Node has rebooted
      summary: Node {{ (or $labels.node $labels.instance) }} has rebooted {{ $value }} seconds ago.
    expr: |
            (time() - node_boot_time_seconds < 600) and (time() - 600 - (node_boot_time_seconds offset 10m) > 600)
    labels:
      severity: critical

  - alert: NodeHasRebooted
    annotations:
      description: Node has rebooted
      summary: Node {{ (or $labels.node $labels.instance) }} has rebooted {{ $value }} seconds ago.
    expr: |
            (time() - node_boot_time_seconds < 3600) and (time() - 3600 - (node_boot_time_seconds offset 60m) > 3600)
    labels:
      severity: warning
      
#======================================================================================================
#======================================================================================================
- name: HardWare
  rules:
  - alert: Memory High
    expr: (100-node_memory_MemAvailable_bytes/node_memory_MemTotal_bytes*100) > 70
    for: 1m
    labels:
      severity: Info
    annotations:
      description: Memory {{ $labels.instance }} of job {{ $labels.job }} is high {{ $value }}
      value: High({{ $value }})
      summary: "memory high"
  - alert: CPU High
    expr: (100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100)) > 70
    for: 1m
    labels:
      severity: Info
    annotations:
      description: CPU {{ $labels.instance }} of job {{ $labels.job }} is high {{ $value }}
      value: High({{ $value }})
      summary: "cpu high"
  - alert: HostOutOfDiskSpace
    expr: (node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes < 10 and ON (instance, device, mountpoint) node_filesystem_readonly == 0
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: Host out of disk space (instance {{ $labels.instance }})
      description: "Disk is almost full (< 10% left) value= {{ $value | humanize }}%"
  - alert: icmp_check
    expr:  probe_success == 0
    for: 30s
    labels:
      type: http_health
    annotations:
      description: 'Job: {{$labels.job}} IP: {{$labels.instance}} DOWN'


  - alert: MEMORY
    expr: 100 - (node_memory_MemAvailable_bytes * 100 / node_memory_MemTotal_bytes) > 60
    for: 1s
    labels:
      severity: warning
    annotations:
      description:
       "Job: {{$labels.job}}\nHost {{ $labels.instance }}\nMEMORY: {{ $value | humanize }}% - {{ with printf `(node_memory_MemTotal_bytes{instance='%s'} - node_memory_MemAvailable_bytes{instance='%s'})/(1024^3)` $labels.instance $labels.instance | query }} {{ . | first | value | humanize }} {{ end }}GB /{{ with printf `node_memory_MemTotal_bytes{instance='%s'}/(1024^3)` $labels.instance | query }} {{ . | first | value | humanize }}GB {{ end }}"

- name: HardWare
  rules:
  - alert: MEMORY
    expr: (round(100 - ((node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes) * 100)) >= 90)
    for: 5m
    labels:
      severity: Memory High
    annotations:
      description:
       "Job: {{$labels.job}}\nIP: {{ $labels.instance }}\nMEMORY: {{ $value | humanize }}% - {{ with printf `(node_memory_MemTotal_bytes{instance='%s'} - node_memory_MemAvailable_bytes{instance='%s'})/(1024^3)` $labels.instance $labels.instance | query }} {{ . | first | value | humanize }} {{ end }}GB /{{ with printf `(round(node_memory_MemTotal_bytes{instance='%s'}/(1024^3)))` $labels.instance | query }} {{ . | first | value }}GB {{ end }}"

  - alert: CPU High
    expr: (round(100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100)) >= 90)
    for: 1m
    labels:
      severity: Info
    annotations:
      description: "Job: {{$labels.job}}\nIP: {{ $labels.instance }}\nCPU Load: {{ $value }}%"

- name: DISK-SPACE
  rules:
  - alert: DISK-FREE
    expr: (round((node_filesystem_avail_bytes{device!="tmpfs",mountpoint!="/boot"} * 100) / node_filesystem_size_bytes{device!="tmpfs",mountpoint!="/boot"}) <= 20 and on(instance, device, mountpoint) node_filesystem_readonly == 0 and (node_filesystem_avail_bytes{device!="tmpfs",mountpoint!="/boot"})/(1024^3) <=10)
    for: 1m
    labels:
      severity: Critical-Disk Free
    annotations:
      description: "Job: {{$labels.job}}\nIP: {{ $labels.instance }}\nMountpoint: {{ $labels.mountpoint }} = {{ $value|humanize }}% is {{ printf `node_filesystem_avail_bytes{instance='%s',mountpoint='%s'}` $labels.instance $labels.mountpoint | query | first | value | humanize}}B"
